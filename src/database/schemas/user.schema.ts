import mongoose from 'mongoose'
import { UserType } from './types/user.type'

export const UserSchema = new mongoose.Schema<UserType>({
    username: { type: String, required: true, unique: true, lowercase: true },
    password: { type: String, required: true },
    email: { type: String, required: true, unique: true, lowercase: true },
    name: { type: String, required: true },
    surname: { type: String, required: true },
    birthdate: { type: Date, required: true },
    joined: { type: Date, default: Date.now },
    posts: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Post' }],
    sharedPosts: [{ type: mongoose.Schema.Types.ObjectId, ref: 'SharedPost' }],
    chatRooms: [{ type: mongoose.Schema.Types.ObjectId, ref: 'ChatRoom' }],
    friends: [{ type: String }],
    blocked: [{ type: String }],
    userInfo: {
        location: { type: String, default: 'null' },
        bio: { type: String, default: 'null' },
        avatar: { type: String, default: 'default' },
        cover: { type: String, default: 'default' },
        website: { type: String, default: 'null' },
        relationship: {
            type: String,
            enum: [
                'single',
                'in a relationship',
                'engaged',
                'married',
                'complicated',
                'open relationship',
                'widowed',
                'separated',
                'divorced',
            ],
            default: 'single',
        },
        relationshipWith: { type: String, default: 'null' },
        work: { type: String, default: 'null' },
        education: { type: String, default: 'null' },
        languages: [{ type: String, default: 'null' }],
        interests: [{ type: String, default: 'null' }],
        pinnedSong: { type: String, default: 'null' },
    },
    ban: {
        banned: { type: Boolean, default: false },
        bannedReason: { type: String, default: 'null' },
        bannedUntil: { type: Date, default: Date.now },
        bannedTimes: [{ type: String, default: 'null' }],
    },
    notifications: [
        { type: mongoose.Schema.Types.ObjectId, ref: 'Notification' },
    ],
    videos: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Video' }],
    shorts: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Short' }],
    books: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Book' }],
    events: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Event' }],
    music: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Music' }],
    podcasts: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Podcast' }],
    pages: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Page' }],
    groupsOwner: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Group' }],
    allowCustomAds: { type: Boolean, default: true },
    companies: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Company' }],
    customAdsSettings: {
        interests: [{ type: String, default: 'null' }],
    },
    groupsInvited: [
        {
            by: { type: String, required: true },
            group: { type: String, required: true },
            date: { type: Date, default: Date.now },
        },
    ],
    groupsJoined: [{ type: String }],
    marketProducts: [
        { type: mongoose.Schema.Types.ObjectId, ref: 'MarketProduct' },
    ],
    voiceRoomId: { type: String, default: 'null' },
})
